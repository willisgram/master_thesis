data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,Cost) %>% arrange(index)
cost_round_16 <- cbind(cost_round_16,data_temp$Cost)
colnames(cost_round_16)[i-3] <- paste0("round_",i)
}
#Team
team_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,Team.x) %>% arrange(index)
team_round_16 <- cbind(team_round_16,data_temp$Team.x)
colnames(team_round_16)[i-3] <- paste0("round_",i)
}
#Position
pos_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,PositionsList.x) %>% arrange(index)
pos_round_16 <- cbind(pos_round_16,data_temp$PositionsList.x)
colnames(pos_round_16)[i-3] <- paste0("round_",i)
}
#Transfers in
trans_in_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,TransfersInRound) %>% arrange(index)
trans_in_round_16 <- cbind(trans_in_round_16,data_temp$TransfersInRound)
colnames(trans_in_round_16)[i-3] <- paste0("round_",i)
}
#Transfers out
trans_out_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,TransfersOutRound) %>% arrange(index)
trans_out_round_16 <- cbind(trans_out_round_16,data_temp$TransfersOutRound)
colnames(trans_out_round_16)[i-3] <- paste0("round_",i)
}
# Total minutes played
tot_min_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,MinutesPlayed) %>% arrange(index)
tot_min_round_16 <- cbind(tot_min_round_16,data_temp$MinutesPlayed)
colnames(tot_min_round_16)[i-3] <- paste0("round_",i)
}
#Minutes played, 90 > indicates double round
minutes_round_16 <- data.frame(index = 1:625)
for (i in 5:37) {
if(i == 5){
minutes_round_16[,i-3] <- tot_min_round_16[,i-3]
} else{
minutes_round_16[,i-3] <- if_else(condition = is.na(tot_min_round_16[,i-4])&!is.na(tot_min_round_16[,i-3]),
true = tot_min_round_16[,i-3],
false = tot_min_round_16[,i-3]-tot_min_round_16[,i-4])
}
colnames(minutes_round_16)[i-3] <- paste0("round_",i)
}
rm(list = c("data_26","data_temp"))
final_team <- function(round,selected,starting,substitutes,minutes_round){
##Decide team
selected_team <- inner_join(selected, players, by = "index") %>% select(index,PositionsList)
starting_team <- inner_join(starting, players, by = "index") %>% select(index,PositionsList)
subs_team     <- inner_join(substitutes, players, by = "index") %>% select(index,PositionsList)
final_team    <- starting_team
minutes_played_starting <- inner_join(starting_team,minutes_round,by = "index") %>% select(
index,PositionsList,matches(paste0("round_",as.character(round))))
colnames(minutes_played_starting)[3] <- "min_played"
minutes_played_selected <- inner_join(selected_team,minutes_round,by = "index") %>% select(
index,PositionsList,matches(paste0("round_",as.character(round))))
colnames(minutes_played_selected)[3] <- "min_played"
minutes_played_subs     <- inner_join(subs_team,minutes_round,by = "index") %>% select(
index,PositionsList,matches(paste0("round_",as.character(round))))
colnames(minutes_played_subs)[3] <- "min_played"
minutes_played_gk       <- minutes_played_starting %>% filter(PositionsList == "GLK")
minutes_played_gk_sub   <- minutes_played_selected %>% filter(PositionsList == "GLK" & index != minutes_played_gk$index)
final_team_gk           <- starting_team %>% filter(PositionsList == "GLK")
#Check GK
if(minutes_played_gk$min_played == 0 & minutes_played_gk_sub$min_played != 0){
final_team_gk <- minutes_played_gk_sub %>% select(index,PositionsList)
}
#Check outfield
minutes_played_starting_out <- minutes_played_starting %>% filter(PositionsList != "GLK")
final_team_out <- minutes_played_starting_out %>% select(index,PositionsList)
#Count formation
d <- minutes_played_starting_out %>% filter(PositionsList == "DEF")
d <- dim(d)[1]
d_org <- d
m <- minutes_played_starting_out %>% filter(PositionsList == "MID")
m <- dim(m)[1]
m_org <- m
a <- minutes_played_starting_out %>% filter(PositionsList == "FWD")
a <- dim(a)[1]
a_org <- a
###Replace
#Create index keepers
not_playing_starting_index <-  which(minutes_played_starting_out$min_played == 0)
#playing_subs <-  minutes_played_subs %>% filter()
playing_subs_index <-  which(minutes_played_subs$min_played != 0)
for (j in 1:length(playing_subs_index)) {
while(length(not_playing_starting_index) != 0 & length(playing_subs_index) != 0){
for(k in 1:length(not_playing_starting_index)){
#Player substituted out
if(minutes_played_starting_out$PositionsList[not_playing_starting_index[k]] == "DEF"){
d <- d-1
} else if(minutes_played_starting_out$PositionsList[not_playing_starting_index[k]] == "MID"){
m <- m-1
} else if(minutes_played_starting_out$PositionsList[not_playing_starting_index[k]] == "FWD"){
a <- a-1
}
#Player substituted in
if(minutes_played_subs$PositionsList[playing_subs_index[j]] == "DEF"){
d <- d+1
} else if(minutes_played_subs$PositionsList[playing_subs_index[j]] == "MID"){
m <- m+1
} else if(minutes_played_subs$PositionsList[playing_subs_index[j]] == "FWD"){
a <- a+1
}
if(3<=d & d<=5 & 3<=m & m<=5 & 1<=a & a<=3){
final_team_out[not_playing_starting_index[k],] <- subs_team[playing_subs_index[j],]
d_org <- d
m_org <- m
a_org <- a
not_playing_starting_index <- not_playing_starting_index[-k]
playing_subs_index         <- playing_subs_index[-j]
break
} else{
d <- d_org
m <- m_org
a <- a_org
}
}
}
}
final_team <- rbind(final_team_gk,final_team_out) %>% arrange(
match(PositionsList, c("GLK","DEF","MID","FWD")),index
)
return(final_team)
}
total_points <- function(round,final_team,captain,vice_captain,ill_trans,points_round,minutes_round){
points_players <- inner_join(points_round,final_team,by = "index")
points_players <- points_players %>% select(index, matches(paste0("round_",as.character(round))))
colnames(points_players)[2] <- "points"
#Captain/vice captain
minutes_played_cap  <- inner_join(captain,minutes_round,by = "index") %>% select(
index,matches(paste0("round_",as.character(round))))
colnames(minutes_played_cap)[2] <- "min_played"
minutes_played_vice_cap  <- inner_join(vice_captain,minutes_round,by = "index") %>% select(
index,matches(paste0("round_",as.character(round))))
colnames(minutes_played_vice_cap)[2] <- "min_played"
if(minutes_played_cap$min_played != 0){
points_players$points <- if_else(condition = points_players$index == captain$index,
true = points_players$points*2,
false = points_players$points*1)
} else if(minutes_played_cap$min_played == 0 & minutes_played_vice_cap$min_played != 0){
points_players$points <- if_else(condition = points_players$index == vice_captain$index,
true = points_players$points*2,
false = points_players$points*1)
}
total_points <- sum(points_players$points)-ill_trans*4
return(total_points)
}
round_start <- 15 #tot_points[i] must change if editing
round_stop  <- 25
total_points_round <- data.frame(round = round_start:round_stop,points = rep(0,(round_stop-round_start+1)))
for (i in 1:11) {
path <- "../../../output/forecasting_method/"
method <- "regression/"
folder <- paste0("GW",i,"/")
round  <- i+14
#Captain
file_cap <- paste0(path,method,folder,"captain.csv")
captain <- read.csv(file_cap,header = F)
colnames(captain)[1] <- "captain"
captain_round <- captain %>% mutate(index = as.integer(captain)) %>% select(index)
#Vice captain
file_vice <- paste0(path,method,folder,"vice_captain.csv")
vice_captain <- read.csv(file_vice,header = F)
colnames(vice_captain)[1] <- "vice_captain"
vice_captain_round <- vice_captain %>% mutate(index = as.integer(vice_captain)) %>% select(index)
#Selected
file_sel <- paste0(path,method,folder,"selected.csv")
selected <- read.csv(file_sel,header = F)
colnames(selected)[1] <- "selected"
selected_round <- selected %>% mutate(index = as.integer(selected)) %>% select(index)
#Starting
file_start <- paste0(path,method,folder,"starting.csv")
starting <- read.csv(file_start,header = F)
colnames(starting)[1] <- "starting"
starting_round <- starting %>% mutate(index = as.integer(starting)) %>% select(index)
#Substitutes
file_sub <- paste0(path,method,folder,"substitutes.csv")
substitutes <- read.csv(file_sub,header = F)
colnames(substitutes)[1] <- "substitutes"
substitutes_round <- substitutes %>% mutate(index = as.integer(substitutes)) %>% select(index)
final_team_round <- final_team(round = round,selected = selected_round,starting = starting_round,
substitutes = substitutes_round,minutes_round = minutes_round_16)
if(i == 1){
ill_trans_round <- 0
} else{
ill_trans_round  <- max(0,14 - dim(inner_join(selected_round,selected_prev,'index'))[1])
}
total_points_round$points[i]  <- total_points(round = round,final_team = final_team_round,
captain = captain_round,
vice_captain = vice_captain_round,ill_trans = ill_trans_round,
points_round = points_round_16,minutes_round = minutes_round_16)
selected_prev <- selected_round
}
View(total_points_round)
mean(total_points_round$points)
round_start <- 15 #tot_points[i] must change if editing
round_stop  <- 25
total_points_round <- data.frame(round = round_start:round_stop,
points = rep(0,round_stop-round_start+1),
points_brutto = rep(0,round_stop-round_start+1))
round_start <- 15 #tot_points[i] must change if editing
round_stop  <- 25
total_points_round <- data.frame(round = round_start:round_stop,
points = rep(0,round_stop-round_start+1),
points_brutto = rep(0,round_stop-round_start+1))
for (i in 1:11) {
path <- "../../../output/forecasting_method/"
method <- "regression/"
folder <- paste0("GW",i,"/")
round  <- i+14
#Captain
file_cap <- paste0(path,method,folder,"captain.csv")
captain <- read.csv(file_cap,header = F)
colnames(captain)[1] <- "captain"
captain_round <- captain %>% mutate(index = as.integer(captain)) %>% select(index)
#Vice captain
file_vice <- paste0(path,method,folder,"vice_captain.csv")
vice_captain <- read.csv(file_vice,header = F)
colnames(vice_captain)[1] <- "vice_captain"
vice_captain_round <- vice_captain %>% mutate(index = as.integer(vice_captain)) %>% select(index)
#Selected
file_sel <- paste0(path,method,folder,"selected.csv")
selected <- read.csv(file_sel,header = F)
colnames(selected)[1] <- "selected"
selected_round <- selected %>% mutate(index = as.integer(selected)) %>% select(index)
#Starting
file_start <- paste0(path,method,folder,"starting.csv")
starting <- read.csv(file_start,header = F)
colnames(starting)[1] <- "starting"
starting_round <- starting %>% mutate(index = as.integer(starting)) %>% select(index)
#Substitutes
file_sub <- paste0(path,method,folder,"substitutes.csv")
substitutes <- read.csv(file_sub,header = F)
colnames(substitutes)[1] <- "substitutes"
substitutes_round <- substitutes %>% mutate(index = as.integer(substitutes)) %>% select(index)
final_team_round <- final_team(round = round,selected = selected_round,starting = starting_round,
substitutes = substitutes_round,minutes_round = minutes_round_16)
if(i == 1){
ill_trans_round <- 0
} else{
ill_trans_round  <- max(0,14 - dim(inner_join(selected_round,selected_prev,'index'))[1])
}
total_points_round$points[i]  <- total_points(round = round,final_team = final_team_round,
captain = captain_round,
vice_captain = vice_captain_round,ill_trans = ill_trans_round,
points_round = points_round_16,minutes_round = minutes_round_16)
total_points_round$points_brutto[i]  <- total_points(round = round,final_team = final_team_round,
captain = captain_round,
vice_captain = vice_captain_round,ill_trans = 0,
points_round = points_round_16,minutes_round = minutes_round_16)
selected_prev <- selected_round
}
mean(total_points_round$points_brutto)
mean(total_points_round$points)
install.packages("xtable")
library(xtable)
rownames(total_points_round) <- NULL
xtable(x = total_points_round)
?print.xtable
R> print(xtable(res), include.rownames=FALSE)
R> print(xtable(total_points_round), include.rownames=FALSE)
print(xtable(total_points_round), include.rownames=FALSE)
res <- print(xtable(total_points_round), include.rownames=FALSE)
res
res <- xtable(x = total_points_round)
res
res <- xtable(x = total_points_round, include.rownames=FALSE)
res
install.packages("stargazer")
library(stargazer)
stargazer(total_points_round)
print(xtable(total_points_round), include.rownames=FALSE)
print(xtable(total_points_round,digits = 0), include.rownames=FALSE,)
print(xtable(total_points_round,digits = 0,align = rep("r",3)), include.rownames=FALSE)
print(xtable(total_points_round,digits = 0,align = rep("r",4)), include.rownames=FALSE)
g <- ggplot(data = total_points_round,aes(x = round)) + geom_line(aes(y = points))
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points)) + geom_line(aes(y = points_brutto))
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points)
) + geom_line(aes(y = points_brutto)) + labs(x = "Round", y = "Points"
)
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Points")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
)
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Points")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_color_manual(name = "")
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Points")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_color_manual(name = "", values = c("red","blue"))
g
install.packages("gg_themes")
install.packages("ggthemes")
library(ggthemes)
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_y_discrete() + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete() + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(limits = c(15,25)) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(limits = c(15,25),breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(limits = c(15,25),breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(limits = c(15,25),breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
g
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
limits = c(15,25),
breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
g
getwd()
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
g
name_plot <- paste0("points_15_to_25.png")
path_plot <- '../../../../latex_master_thesis/fig/'
file_plot <- paste0(path_plot, name_plot)
dev.print(png, file_plot )
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
ggsave(file_plot)
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Net")
) + geom_line(aes(y = points_brutto,colour = "Gross")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Net")
) + geom_line(aes(y = points_brutto,colour = "Gross")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
g
name_plot <- paste0("points_15_to_25.png")
path_plot <- '../../../../latex_master_thesis/fig/'
file_plot <- paste0(path_plot, name_plot)
dev.print(png, file_plot)
ggsave()
ggsave(file_plot)

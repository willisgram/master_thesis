for (i in 1:11) {
path <- "../../../output/forecasting_method/"
method <- "regression/"
folder <- paste0("GW",i,"/")
round  <- i+14
#Captain
file_cap <- paste0(path,method,folder,"captain.csv")
captain <- read.csv(file_cap,header = F)
colnames(captain)[1] <- "captain"
captain_round <- captain %>% mutate(index = as.integer(captain)) %>% select(index)
#Vice captain
file_vice <- paste0(path,method,folder,"vice_captain.csv")
vice_captain <- read.csv(file_vice,header = F)
colnames(vice_captain)[1] <- "vice_captain"
vice_captain_round <- vice_captain %>% mutate(index = as.integer(vice_captain)) %>% select(index)
#Selected
file_sel <- paste0(path,method,folder,"selected.csv")
selected <- read.csv(file_sel,header = F)
colnames(selected)[1] <- "selected"
selected_round <- selected %>% mutate(index = as.integer(selected)) %>% select(index)
#Starting
file_start <- paste0(path,method,folder,"starting.csv")
starting <- read.csv(file_start,header = F)
colnames(starting)[1] <- "starting"
starting_round <- starting %>% mutate(index = as.integer(starting)) %>% select(index)
#Substitutes
file_sub <- paste0(path,method,folder,"substitutes.csv")
substitutes <- read.csv(file_sub,header = F)
colnames(substitutes)[1] <- "substitutes"
substitutes_round <- substitutes %>% mutate(index = as.integer(substitutes)) %>% select(index)
final_team_round <- final_team(round = round,selected = selected_round,starting = starting_round,
substitutes = substitutes_round,minutes_round = minutes_round_16)
if(i == 1){
ill_trans_round <- 0
} else{
ill_trans_round  <- max(0,14 - dim(inner_join(selected_round,selected_prev,'index'))[1])
}
total_points_round$points[i]  <- total_points(round = round,final_team = final_team_round,
captain = captain_round,
vice_captain = vice_captain_round,ill_trans = ill_trans_round,
points_round = points_round_16,minutes_round = minutes_round_16)
selected_prev <- selected_round
}
View(total_points_round)
mean(total_points_round$points)
round_start <- 15 #tot_points[i] must change if editing
round_stop  <- 25
total_points_round <- data.frame(round = round_start:round_stop,
points = rep(0,round_stop-round_start+1),
points_brutto = rep(0,round_stop-round_start+1))
round_start <- 15 #tot_points[i] must change if editing
round_stop  <- 25
total_points_round <- data.frame(round = round_start:round_stop,
points = rep(0,round_stop-round_start+1),
points_brutto = rep(0,round_stop-round_start+1))
for (i in 1:11) {
path <- "../../../output/forecasting_method/"
method <- "regression/"
folder <- paste0("GW",i,"/")
round  <- i+14
#Captain
file_cap <- paste0(path,method,folder,"captain.csv")
captain <- read.csv(file_cap,header = F)
colnames(captain)[1] <- "captain"
captain_round <- captain %>% mutate(index = as.integer(captain)) %>% select(index)
#Vice captain
file_vice <- paste0(path,method,folder,"vice_captain.csv")
vice_captain <- read.csv(file_vice,header = F)
colnames(vice_captain)[1] <- "vice_captain"
vice_captain_round <- vice_captain %>% mutate(index = as.integer(vice_captain)) %>% select(index)
#Selected
file_sel <- paste0(path,method,folder,"selected.csv")
selected <- read.csv(file_sel,header = F)
colnames(selected)[1] <- "selected"
selected_round <- selected %>% mutate(index = as.integer(selected)) %>% select(index)
#Starting
file_start <- paste0(path,method,folder,"starting.csv")
starting <- read.csv(file_start,header = F)
colnames(starting)[1] <- "starting"
starting_round <- starting %>% mutate(index = as.integer(starting)) %>% select(index)
#Substitutes
file_sub <- paste0(path,method,folder,"substitutes.csv")
substitutes <- read.csv(file_sub,header = F)
colnames(substitutes)[1] <- "substitutes"
substitutes_round <- substitutes %>% mutate(index = as.integer(substitutes)) %>% select(index)
final_team_round <- final_team(round = round,selected = selected_round,starting = starting_round,
substitutes = substitutes_round,minutes_round = minutes_round_16)
if(i == 1){
ill_trans_round <- 0
} else{
ill_trans_round  <- max(0,14 - dim(inner_join(selected_round,selected_prev,'index'))[1])
}
total_points_round$points[i]  <- total_points(round = round,final_team = final_team_round,
captain = captain_round,
vice_captain = vice_captain_round,ill_trans = ill_trans_round,
points_round = points_round_16,minutes_round = minutes_round_16)
total_points_round$points_brutto[i]  <- total_points(round = round,final_team = final_team_round,
captain = captain_round,
vice_captain = vice_captain_round,ill_trans = 0,
points_round = points_round_16,minutes_round = minutes_round_16)
selected_prev <- selected_round
}
mean(total_points_round$points_brutto)
mean(total_points_round$points)
install.packages("xtable")
library(xtable)
rownames(total_points_round) <- NULL
xtable(x = total_points_round)
?print.xtable
R> print(xtable(res), include.rownames=FALSE)
R> print(xtable(total_points_round), include.rownames=FALSE)
print(xtable(total_points_round), include.rownames=FALSE)
res <- print(xtable(total_points_round), include.rownames=FALSE)
res
res <- xtable(x = total_points_round)
res
res <- xtable(x = total_points_round, include.rownames=FALSE)
res
install.packages("stargazer")
library(stargazer)
stargazer(total_points_round)
print(xtable(total_points_round), include.rownames=FALSE)
print(xtable(total_points_round,digits = 0), include.rownames=FALSE,)
print(xtable(total_points_round,digits = 0,align = rep("r",3)), include.rownames=FALSE)
print(xtable(total_points_round,digits = 0,align = rep("r",4)), include.rownames=FALSE)
g <- ggplot(data = total_points_round,aes(x = round)) + geom_line(aes(y = points))
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points)) + geom_line(aes(y = points_brutto))
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points)
) + geom_line(aes(y = points_brutto)) + labs(x = "Round", y = "Points"
)
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Points")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
)
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Points")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_color_manual(name = "")
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Points")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_color_manual(name = "", values = c("red","blue"))
g
install.packages("gg_themes")
install.packages("ggthemes")
library(ggthemes)
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_y_discrete() + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete() + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(limits = c(15,25)) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(limits = c(15,25),breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(limits = c(15,25),breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_classic()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")) + labs(x = "Round", y = "Points"
) + scale_x_discrete(limits = c(15,25),breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
g
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
limits = c(15,25),
breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(name = "", values = c("red","blue")) + theme_base()
g
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
g
getwd()
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
g
name_plot <- paste0("points_15_to_25.png")
path_plot <- '../../../../latex_master_thesis/fig/'
file_plot <- paste0(path_plot, name_plot)
dev.print(png, file_plot )
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Netto")
) + geom_line(aes(y = points_brutto,colour = "Brutto")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
ggsave(file_plot)
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Net")
) + geom_line(aes(y = points_brutto,colour = "Gross")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
g <- ggplot(data = total_points_round,aes(x = round)
) + geom_line(aes(y = points, colour = "Net")
) + geom_line(aes(y = points_brutto,colour = "Gross")
) + labs(x = "Round", y = "Points"
) + scale_x_continuous(
limits = c(15,25),
breaks = 15:25) + scale_color_manual(
name = "",
values = c("red","blue")
) + theme_base() + ggtitle("Points Round 15-25 2016/2017")
g
name_plot <- paste0("points_15_to_25.png")
path_plot <- '../../../../latex_master_thesis/fig/'
file_plot <- paste0(path_plot, name_plot)
dev.print(png, file_plot)
ggsave()
ggsave(file_plot)
################
library(tidyverse)
options(stringsAsFactors = F)
#List after transfer window. Assume it to be enough
folder <- "input/"
year   <- "17"
week   <- "26"
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_26 <- read.csv(path)
players <- data_26 %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
players <- players %>% arrange(match(PositionsList, c("GLK","DEF","MID","FWD")),Team) %>% mutate(
index = 1:625
) %>% select(FirstName_1,Surname_1,PositionsList,Team,index)
######################
# Full 2016 data import
######################
#Points
###########
#Import training data
library(tidyverse)
options(stringsAsFactors = F)
folder <- "input/"
points_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,PointsLastRound) %>% arrange(index)
points_round_16 <- cbind(points_round_16,data_temp$PointsLastRound)
colnames(points_round_16)[i-3] <- paste0("round_",i)
}
#Opponents
opponent_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,NextFixture1) %>% arrange(index)
opponent_round_16 <- cbind(opponent_round_16,data_temp$NextFixture1)
colnames(opponent_round_16)[i-3] <- paste0("round_",i+1)
}
#Cost
cost_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,Cost) %>% arrange(index)
cost_round_16 <- cbind(cost_round_16,data_temp$Cost)
colnames(cost_round_16)[i-3] <- paste0("round_",i)
}
#Team
team_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,Team.x) %>% arrange(index)
team_round_16 <- cbind(team_round_16,data_temp$Team.x)
colnames(team_round_16)[i-3] <- paste0("round_",i)
}
#Position
pos_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,PositionsList.x) %>% arrange(index)
pos_round_16 <- cbind(pos_round_16,data_temp$PositionsList.x)
colnames(pos_round_16)[i-3] <- paste0("round_",i)
}
#Transfers in
trans_in_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,TransfersInRound) %>% arrange(index)
trans_in_round_16 <- cbind(trans_in_round_16,data_temp$TransfersInRound)
colnames(trans_in_round_16)[i-3] <- paste0("round_",i)
}
#Transfers out
trans_out_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,TransfersOutRound) %>% arrange(index)
trans_out_round_16 <- cbind(trans_out_round_16,data_temp$TransfersOutRound)
colnames(trans_out_round_16)[i-3] <- paste0("round_",i)
}
# Total minutes played
tot_min_round_16 <- data.frame(index = 1:625)
for( i in 5:37){
year     <- "16"
week   <- as.character(i)
sheet  <- paste0("FPL",year,"-GW",week,".csv")
path   <- paste0(folder,sheet)
data_temp   <- read.csv(path)
data_temp <- data_temp %>% mutate(
Surname_1   = if_else(grepl(Surname,pattern = " "),sub('.* ', '', Surname),Surname),
FirstName_1 = if_else(grepl(Surname,pattern = " "),sub(' .*', '',Surname ), FirstName)
)
data_temp <- full_join(data_temp,players,by = c("FirstName_1" = "FirstName_1","Surname_1"="Surname_1"))
data_temp <- data_temp[!is.na(data_temp$index),]
data_temp <- data_temp %>% select(index,MinutesPlayed) %>% arrange(index)
tot_min_round_16 <- cbind(tot_min_round_16,data_temp$MinutesPlayed)
colnames(tot_min_round_16)[i-3] <- paste0("round_",i)
}
#Minutes played, 90 > indicates double round
minutes_round_16 <- data.frame(index = 1:625)
for (i in 5:37) {
if(i == 5){
minutes_round_16[,i-3] <- tot_min_round_16[,i-3]
} else{
minutes_round_16[,i-3] <- if_else(condition = is.na(tot_min_round_16[,i-4])&!is.na(tot_min_round_16[,i-3]),
true = tot_min_round_16[,i-3],
false = tot_min_round_16[,i-3]-tot_min_round_16[,i-4])
}
colnames(minutes_round_16)[i-3] <- paste0("round_",i)
}
rm(list = c("data_26","data_temp"))
#################
# Write files
##################
library(xlsx) #does not work on mac per now
################
# Create dataframe
################
a <- 3
points_average_a_16 <- data.frame(index = 1:625)
points_average_a_16[,2:5] <- NA
for(i in 5:37){
if(i <= a+4){
points_average_a_16[,i+1] <- NA
} else{
points_average_a_16[,i+1] <- rowMeans(points_round_16[,((i-3)-a):(i-4)])
}
}
colnames(points_average_a_16)[2:38] <- paste0("round_",1:37)
View(points_average_a_16)
s <- 5+a #first prediction with data
h<-10
s <- 5+a #first prediction with data
h<-10
for(week_for in s:37){
predictions_table_average <- points_average_a_16 %>% select(index,week_for+1)
predictions_table_average[,3:(h+1)] <- predictions_table_average[,2]
colnames(predictions_table_average)[2:(h+1)] <- paste0("round_",(week_for):(week_for+h-1))
predictions_table_average[is.na(predictions_table_average)] <- -10000
# Assign name
#Forecasts
name_for_avg <- paste0("forecast_point_GW", as.character(week_for-s+1),".xlsx")
path_for_avg <- '../../../input/dynamic_data/forecasting_method/average/'
file_for_avg <- paste0(path_for_avg, name_for_avg)
#assign(x = name_for,value = predictions_table_average)
# Write xlsx file
rownames(predictions_table_average) <- NULL
write.xlsx(predictions_table_average, file_for_avg,row.names = F)
}

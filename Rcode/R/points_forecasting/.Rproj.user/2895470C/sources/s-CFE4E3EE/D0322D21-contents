#####################
# Master loop to finish all prediction sheets
# Fit model on 2016 round 6 to 30 ish (latest games must be used to forecast first 2017 rounds)
# Forecast entire 2017 season (both by updating and keeping regression model)
#####################

####################
# Create regression model
####################
#####################
# Master loop to finish all prediction sheets
#####################
library(xlsx)
# index - gw_1 - gw_2 ...

# Suggestion, only change opponent and team
# Not using forecast as new previous
# Also, first, fit model and only update predictors


#given input
#k <- 1
h <- 10
last_gw <- 35
n_GLK <- 67
n_DEF <- 206
n_MID <- 263
n_FWD <- 89

GLK_index <- n_GLK
DEF_index <- n_GLK+n_DEF
MID_index <- n_GLK+n_DEF+n_MID
FWD_index <- n_GLK+n_DEF+n_MID+n_FWD
# week_for <- 15

# Train in 2016



for(week_for in 1:last_gw){
  
  # Update regressors
  ##################
  if(week_for == 1){
    regressors <- head(regressors_16,625*32)
    regressors_GLK <- regressors %>% filter(pos == "GLK")
    regressors_DEF <- regressors %>% filter(pos == "DEF")
    regressors_MID <- regressors %>% filter(pos == "MID")
    regressors_FWD <- regressors %>% filter(pos == "FWD")
    
    predictors <- tail(regressors_16,625)
    predictors[,"opponent"] <- regressors_16_17$opponent[1:625]
    predictors[,"team"] <- regressors_16_17$team[1:625]
    predictors$team <- if_else(
      predictors$team == "BHA",true = "NEW",false = predictors$team)
    predictors[,"cost"] <- regressors_16_17$cost[1:625]
    predictors[,"H_A"] <- regressors_16_17$H_A[1:625]
    predictors[,"pos"] <- regressors_16_17$pos[1:625]
    predictors[,"trans_in_prev_1"] <- rep(0,625)
    predictors[,"trans_out_prev_1"] <- rep(0,625)
    
    predictors_GLK <- predictors[1:GLK_index,]
    predictors_DEF <- predictors[(GLK_index+1):DEF_index,]
    predictors_MID <- predictors[(DEF_index+1):MID_index,]
    predictors_FWD <- predictors[(MID_index+1):FWD_index,]
    
  } else if (week_for == 2){
    regressors <- head(regressors_16,625*32)
    regressors_GLK <- regressors %>% filter(pos == "GLK")
    regressors_DEF <- regressors %>% filter(pos == "DEF")
    regressors_MID <- regressors %>% filter(pos == "MID")
    regressors_FWD <- regressors %>% filter(pos == "FWD")
    
    predictors <- regressors_17[1:625,]
    predictors$team <- if_else(
      predictors$team == "BHA",true = "NEW",false = predictors$team)
    predictors_GLK <- predictors[1:GLK_index,]
    predictors_DEF <- predictors[(GLK_index+1):DEF_index,]
    predictors_MID <- predictors[(DEF_index+1):MID_index,]
    predictors_FWD <- predictors[(MID_index+1):FWD_index,]
  } else{
    regressors <- rbind(tail(regressors_16,625*(32-week_for+2)),head(regressors_17,625*(week_for-2)))
    regressors_GLK <- regressors %>% filter(pos == "GLK")
    regressors_DEF <- regressors %>% filter(pos == "DEF")
    regressors_MID <- regressors %>% filter(pos == "MID")
    regressors_FWD <- regressors %>% filter(pos == "FWD")
    
    predictors <- regressors_17[(625*(week_for-2)+1):(625*(week_for-1)),]
    predictors_GLK <- predictors[1:GLK_index,]
    predictors_DEF <- predictors[(GLK_index+1):DEF_index,]
    predictors_MID <- predictors[(DEF_index+1):MID_index,]
    predictors_FWD <- predictors[(MID_index+1):FWD_index,]
  }
  
  #################
  #Fit Models
  model_GLK <- lm(data = regressors_GLK,
                  realized ~ opponent + team + cost + trans_in_prev_1 + trans_out_prev_1 + H_A + minutes
                  + saves + assists + own_goals)
  model_DEF <- lm(data = regressors_DEF,
                  realized ~ opponent + team + cost + trans_in_prev_1 + trans_out_prev_1 + H_A + minutes
                  + y_cards)
  model_MID <- lm(data = regressors_MID,
                  realized ~ opponent + team + cost + trans_in_prev_1 + trans_out_prev_1 + H_A + minutes + y_cards
                  + goals + pen_miss + clean_sheet + assists)
  model_FWD <- lm(data = regressors_FWD,
                  realized ~ opponent + team + cost + trans_in_prev_1 + minutes
                  + goals + pen_miss + assists)
  
  #Predict
  predictions <- data.frame(index = 1:625,pred = rep(NA,625))
  
  if(35-week_for < h){
    n <- 35-week_for+1
  } else{
    n <- h
  }
  
  for (j in 1:n) {
    if( j == 1){
      predictions_GLK <- predict(object = model_GLK,newdata = predictors_GLK)
      predictions$pred[1:GLK_index] <- predictions_GLK
      predictions_DEF <- predict(object = model_DEF,newdata = predictors_DEF)
      predictions$pred[(GLK_index+1):DEF_index] <- predictions_DEF
      predictions_MID <- predict(object = model_MID,newdata = predictors_MID)
      predictions$pred[(DEF_index+1):MID_index] <- predictions_MID
      predictions_FWD <- predict(object = model_FWD,newdata = predictors_FWD)
      predictions$pred[(MID_index+1):FWD_index] <- predictions_FWD
      
      ##Store
      name <- paste0("gw_",as.character(week_for))
      predictions_table <- predictions
      colnames(predictions_table)[j+1] <- name
    }
    else{
      
      predictions_u <- data.frame(pred = rep(NA,625))
      
      opponent_u <- opponent_round_17[week_for+j]
      team_u     <- team_round_17[week_for+j]
      H_A_u      <- h_a_17[week_for+j]
      H_A_u[H_A_u == "W"] <- NA
      
      predictors[, "opponent"] <- opponent_u
      predictors[, "team"] <- team_u
      if(week_for == 1 | week_for == 2){
        predictors$team <- if_else(
          predictors$team == "BHA",true = "NEW",false = predictors$team)
      }
      predictors[, "H_A"] <- H_A_u
      
      predictors_GLK <- predictors[1:GLK_index,]
      predictors_DEF <- predictors[(GLK_index+1):DEF_index,]
      predictors_MID <- predictors[(DEF_index+1):MID_index,]
      predictors_FWD <- predictors[(MID_index+1):FWD_index,]
      
      predictions_GLK <- predict(object = model_GLK,newdata = predictors_GLK)
      predictions_u$pred[1:GLK_index] <- predictions_GLK
      predictions_DEF <- predict(object = model_DEF,newdata = predictors_DEF)
      predictions_u$pred[(GLK_index+1):DEF_index] <- predictions_DEF
      predictions_MID <- predict(object = model_MID,newdata = predictors_MID)
      predictions_u$pred[(DEF_index+1):MID_index] <- predictions_MID
      predictions_FWD <- predict(object = model_FWD,newdata = predictors_FWD)
      predictions_u$pred[(MID_index+1):FWD_index] <- predictions_FWD
      
      ##Store
      name <- paste0("gw_",as.character(week_for+j-1))
      predictions_table <- cbind(predictions_table,predictions_u)
      colnames(predictions_table)[j+1] <- name
    }
  }
  
  
  # Stucture back to standard format and write xlsx
  ###############
  
  # Handle NAs for predictions
  predictions_table[is.na(predictions_table)] <- -10000
  
  # Assign name
  #Forecasts
  name_for <- paste0("forecast_point_GW", as.character(week_for),".xlsx")
  path_for <- '../../../input/dynamic_data/season_17/forecasting_method/regression/'
  file_for <- paste0(path_for, name_for)
  
  #assign(x = name_for,value = predictions_table)
  
  # Write xlsx file
  rownames(predictions_table) <- NULL
  write.xlsx(predictions_table, file_for,row.names = F)
  #################
}

